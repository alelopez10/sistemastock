///////////////////////////////////////////////////////////
//  StockMedicamento.cs
//  Implementation of the Class StockMedicamento
//  Generated by Enterprise Architect
//  Created on:      14-ene-2014 21:36:21
///////////////////////////////////////////////////////////


using System;
using Centro_Salud.Persistencia;
using Centro_Salud;
using System.Collections.Generic;
using Centro_Salud.Presentacion;
using System.Linq;

public class IStockMedicamento:Intermediario {

	private int codigoMedicamento;
	private decimal stockActual;
    private decimal stockInicioMes;
    private decimal stockMinimo;
    private decimal stockAlerta;

    	

	public IStockMedicamento(){

	}
	~IStockMedicamento(){


	}
     public override void save<T>(T entity){
      try
        {
            StockMedicamento stock = entity as StockMedicamento;
            dao.StockMedicamentos.InsertOnSubmit(stock);    

        }
        catch (Exception ex)
        {
            throw new Exception("Error al guardar" + ex.Message);
        }
    
    }

	public virtual void Dispose(){

	}

    public override void Delete(int id)
    {
        throw new NotImplementedException();
    }
    public override void Update<T>(T entity)
    {
        try
        {
            StockMedicamento stock = entity as StockMedicamento;
            dao.SubmitChanges();
        }
        catch (Exception ex)
        {
            throw new Exception("Error al guardar" + ex.Message);
        }
       // throw new NotImplementedException();
    }
    public override List<T> getByCriterio<T>(string att, string op, string val)
    {
        throw new NotImplementedException();
    }
    public override IList<T> getPorCriterio<T>(string name)
    {
        throw new NotImplementedException();

     //        return (from stock in dao.StockMedicamentos where stock.codigoMedicamento = name select stock).ToList<T>;

              //.SingleOrDefault() as List<T>; //retorna un solo Producto
    }

    public override object getPorId(int id)
    {
        throw new NotImplementedException();
    }
    public override IList<T> getCriterioById<T>(string att, string op, int val)
    {
        return (from stock in dao.StockMedicamentos where stock.codigoMedicamento == val select stock).ToList() as List<T>;
    }
    public override List<T> getAll<T>()
    {
        return (from stock in dao.StockMedicamentos select stock).ToList() as List<T>;
    }
	

}//end Enfermedad