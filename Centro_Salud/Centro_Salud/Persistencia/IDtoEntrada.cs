///////////////////////////////////////////////////////////
//  DtoEntrada.cs
//  Implementation of the Class DtoEntrada
//  Generated by Enterprise Architect
//  Created on:      14-ene-2014 21:36:21
///////////////////////////////////////////////////////////

using System;
using Centro_Salud.Persistencia;
using Centro_Salud;
using System.Collections.Generic;
using Centro_Salud.Presentacion;
using System.Linq;

namespace Centro_Salud.Persistencia
{
    public class IDtoEntrada : Intermediario
    {

        //int item = 0;
        //int codigoMedicamento = 0;
        //int cantidad = 0;
        //String descripcion = null;

        public IDtoEntrada()
        {

        }

        ~IDtoEntrada()
        {

        }

        public virtual void Dispose()
        {

        }

        public override void save<T>(T entity)
        {
            try
            {
                DtoEntrada e = entity as DtoEntrada;

                dao.DtoEntradas.InsertOnSubmit(e);
      

            }
            catch (Exception ex)
            {
                throw new Exception("Error al guardar" + ex.Message);
            }

        }

        public override void Delete(int id)
        {
            throw new NotImplementedException();
        }
        public override void Update<T>(T entity)
        {
            throw new NotImplementedException();
        }
        public override List<T> getByCriterio<T>(string att, string op, string val)
        {
            return (from l in dao.DtoEntradas where l.codigo == Convert.ToInt32(val) select l).ToList() as List<T>;
            //throw new NotImplementedException();
        }
        public override IList<T> getPorCriterio<T>(string name)
        {
            throw new NotImplementedException();
            // return (from lote in dao.Lotes where lote.descripcion == name select med).ToList() as List<T>; //.SingleOrDefault() as List<T>; //retorna un solo Producto
        }

        public override object getPorId(int id)
        {
            throw new NotImplementedException();
        }
        public override IList<T> getCriterioById<T>(string att, string op, int val)
        {
            throw new NotImplementedException();
        }
        public override List<T> getAll<T>()
        {
            return (from entrada in dao.DtoEntradas select entrada).ToList() as List<T>;
        }




    }//end 
}