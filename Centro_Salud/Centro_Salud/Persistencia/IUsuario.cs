///////////////////////////////////////////////////////////
//  Usuario.cs
//  Implementation of the Class Usuario
//  Generated by Enterprise Architect
//  Created on:      14-ene-2014 21:36:24
///////////////////////////////////////////////////////////

using System;
using Centro_Salud.Persistencia;
using Centro_Salud;
using System.Collections.Generic;
using Centro_Salud.Presentacion;
using System.Linq;


public class IUsuario:Intermediario {

	private string contraseña;
	private bool estado;
	private DateTime fechaVigencia;
	private string login;
	public Perfil m_Perfil;


	public virtual void Dispose(){

	}
    public override void save<T>(T entity)
    {
        try
        {
            Usuario us = entity as Usuario;
            dao.Usuarios.InsertOnSubmit(us);
         
        }
        catch (Exception ex)
        {
            throw new Exception("Error al guardar" + ex.Message);
        }
    }
    public override void Delete(int id)
    {
        try
        {
            var us = (from u in dao.Usuarios where u.codigoUsuario == id select u).SingleOrDefault();

            if (us != null)
            {
                us.estado = false;
                dao.SubmitChanges();
            }
        }
        catch (Exception)
        {
            throw;
        }
    }
    public override void Update<T>(T entity)
    {
        throw new NotImplementedException();
    }
    public override List<T> getByCriterio<T>(string att, string op, string val)
    {
        throw new NotImplementedException();
    }
    public override IList<T> getPorCriterio<T>(string name)
    {
        return (from us in dao.Usuarios where us.login == name select us).ToList() as List<T>; //.SingleOrDefault() as List<T>; //retorna un solo Producto
    }

    public override object getPorId(int id)
    {
        throw new NotImplementedException();
    }
    public override IList<T> getCriterioById<T>(string att, string op, int val)
    {
        throw new NotImplementedException();
    }
    public override List<T> getAll<T>()
    {
        return (from u in dao.Usuarios select u).ToList() as List<T>;
    }


}//end Usuario
