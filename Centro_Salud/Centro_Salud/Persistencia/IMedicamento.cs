///////////////////////////////////////////////////////////
//  Medicamento.cs
//  Implementation of the Class Medicamento
//  Generated by Enterprise Architect
//  Created on:      14-ene-2014 21:36:21
///////////////////////////////////////////////////////////


using System;
using Centro_Salud.Persistencia;
using Centro_Salud;
using System.Collections.Generic;
using Centro_Salud.Presentacion;
using System.Linq;

namespace Centro_Salud.Persistencia{
public class IMedicamento:Intermediario {

	private int codigo;
	private string descripcion;
	private string monoDroga;
    private string descripcionAmpliada;
    private int unidadMedida;
    private int formato;

	public IMedicamento(){

	}

	~IMedicamento(){

	}
     public override void save<T>(T entity){
      try
        {
            Medicamento med = entity as Medicamento;
            
            dao.Medicamentos.InsertOnSubmit(med);
                    
        }
        catch (Exception ex)
        {
            throw new Exception("Error al guardar" + ex.Message);
        }
    
    }

	public virtual void Dispose(){

	}

    public override void Delete(int id)
    {
        try
        {
            var med = (from m in dao.Medicamentos where m.codigo == id select m).SingleOrDefault();

            if (med != null)
            {
                // es.Activo = false;
                med.fechaBaja = DateTime.Today.Date;
                dao.SubmitChanges();
            }
        }
        catch (Exception)
        {
            throw;
        }
    }
    public override void Update<T>(T entity)
    {
        throw new NotImplementedException();
    }
    public override List<T> getByCriterio<T>(string att, string op, string val)
    {
        throw new NotImplementedException();
    }
    public override IList<T> getPorCriterio<T>(string name)
    {

        return (from med in dao.Medicamentos where med.descripcion == name select med).ToList() as List<T>; //.SingleOrDefault() as List<T>; //retorna un solo Producto
    }

    public override object getPorId(int id)
    {
        throw new NotImplementedException();
    }
    public override IList<T> getCriterioById<T>(string att, string op, int val)
    {
        return (from med in dao.Medicamentos where med.codigo == val select med).ToList() as List<T>;
    }
    public override List<T> getAll<T>()
    {
        return (from med in dao.Medicamentos select med).ToList() as List<T>;
    }
	

}//end Medicamento
}