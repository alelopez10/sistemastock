///////////////////////////////////////////////////////////
//  Enfermedad.cs
//  Implementation of the Class Enfermedad
//  Generated by Enterprise Architect
//  Created on:      14-ene-2014 21:36:21
///////////////////////////////////////////////////////////


using System;
using Centro_Salud.Persistencia;
using Centro_Salud;
using System.Collections.Generic;
using Centro_Salud.Presentacion;
using System.Linq;

public class IEnfermedad:Intermediario {

	private int codigoEnfermedad;
	private string descripcionEnfermedad;
	private int diasReposo;
	private int gravedad;
	private bool requiereInternacion;
	private string tratamiento;
	public IUsuario m_Usuario;

	public IEnfermedad(){

	}

	~IEnfermedad(){

	}
     public override void save<T>(T entity){
      try
        {
            Enfermedad enf = entity as Enfermedad;
            dao.Enfermedads.InsertOnSubmit(enf);
      
         
        }
        catch (Exception ex)
        {
            throw new Exception("Error al guardar" + ex.Message);
        }
    
    }

	public virtual void Dispose(){

	}

   
    public override void Delete(int id)
    {
        try
        {
            var en = (from e in dao.Enfermedads where e.codigoEnfermedad == id select e).SingleOrDefault();

            if (en != null)
            {
                en.fechaBaja = DateTime.Today.Date;
                dao.SubmitChanges();
            }
        }
        catch (Exception)
        {
            throw;
        }
    }


    public override void Update<T>(T entity)
    {
        //throw new NotImplementedException();
        try
        {
            Enfermedad enf = entity as Enfermedad;
            dao.SubmitChanges();
        }
        catch (Exception ex)
        {
            throw new Exception("Error al guardar" + ex.Message);
        }
    }
    public override List<T> getByCriterio<T>(string att, string op, string val)
    {
        throw new NotImplementedException();
    }
    public override IList<T> getPorCriterio<T>(string name)
    {
        
        return (from enf in dao.Enfermedads where enf.descripcionEnfermedad == name select enf).ToList() as List<T>; //.SingleOrDefault() as List<T>; //retorna un solo Producto
    }

    public override object getPorId(int id)
    {
        throw new NotImplementedException();
    }
    public override IList<T> getCriterioById<T>(string att, string op, int val)
    {
        throw new NotImplementedException();
    }
    public override List<T> getAll<T>()
    {
        return (from enf in dao.Enfermedads select enf).ToList() as List<T>;
    }
	

}//end Enfermedad